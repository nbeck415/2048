{"ast":null,"code":"import _slicedToArray from \"/home/lregina/2048/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/lregina/2048/frontend/src/themes.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { THEMES } from './constants.js';\nconst ThemeStateContext = React.createContext();\nconst ThemeDispatchContext = React.createContext();\n\nconst themeReducer = (state, action) => {\n  switch (action) {\n    case 'light':\n      document.documentElement.setAttribute(\"data-theme\", 'dark');\n      return {\n        color: THEMES.dark,\n        fun: state.fun\n      };\n\n    case 'dark':\n      document.documentElement.setAttribute(\"data-theme\", 'light');\n      return {\n        color: THEMES.light,\n        fun: state.fun\n      };\n\n    case 'ultra':\n      return {\n        color: state.color,\n        fun: 'normal'\n      };\n\n    case 'normal':\n      return {\n        color: state.color,\n        fun: THEMES.ultra\n      };\n\n    default:\n      document.documentElement.setAttribute(\"data-theme\", 'light');\n      return {\n        color: THEMES.light,\n        fun: 'normal'\n      };\n  }\n};\n\nconst ThemeProvider = ({\n  children\n}) => {\n  ThemeProvider.propTypes = {\n    children: PropTypes.isRequired\n  };\n\n  const _React$useReducer = React.useReducer(themeReducer, {\n    color: 'light',\n    fun: 'normal'\n  }),\n        _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n        state = _React$useReducer2[0],\n        dispatch = _React$useReducer2[1];\n\n  return React.createElement(ThemeStateContext.Provider, {\n    value: state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(ThemeDispatchContext.Provider, {\n    value: dispatch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, children));\n};\n\nconst useThemeState = () => {\n  const themeContext = React.useContext(ThemeStateContext);\n\n  if (themeContext === undefined) {\n    throw new Error('themeContext must be used within a ThemeProvider');\n  }\n\n  return themeContext;\n};\n\nconst useThemeDispatch = () => {\n  const themeContext = React.useContext(ThemeDispatchContext);\n\n  if (themeContext === undefined) {\n    throw new Error('themeContext must be used within a ThemeProvider');\n  }\n\n  return themeContext;\n};\n\nexport { ThemeProvider, useThemeState, useThemeDispatch };","map":{"version":3,"sources":["/home/lregina/2048/frontend/src/themes.js"],"names":["React","PropTypes","THEMES","ThemeStateContext","createContext","ThemeDispatchContext","themeReducer","state","action","document","documentElement","setAttribute","color","dark","fun","light","ultra","ThemeProvider","children","propTypes","isRequired","useReducer","dispatch","useThemeState","themeContext","useContext","undefined","Error","useThemeDispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,MAAR,QAAqB,gBAArB;AAEA,MAAMC,iBAAiB,GAAGH,KAAK,CAACI,aAAN,EAA1B;AACA,MAAMC,oBAAoB,GAAGL,KAAK,CAACI,aAAN,EAA7B;;AAEA,MAAME,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvC,UAAQA,MAAR;AACC,SAAK,OAAL;AACCC,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,YAAtC,EAAoD,MAApD;AACA,aAAO;AAACC,QAAAA,KAAK,EAAEV,MAAM,CAACW,IAAf;AAAqBC,QAAAA,GAAG,EAAEP,KAAK,CAACO;AAAhC,OAAP;;AACD,SAAK,MAAL;AACCL,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,YAAtC,EAAoD,OAApD;AACA,aAAO;AAACC,QAAAA,KAAK,EAAEV,MAAM,CAACa,KAAf;AAAsBD,QAAAA,GAAG,EAAEP,KAAK,CAACO;AAAjC,OAAP;;AACD,SAAK,OAAL;AAEC,aAAO;AAACF,QAAAA,KAAK,EAAEL,KAAK,CAACK,KAAd;AAAqBE,QAAAA,GAAG,EAAE;AAA1B,OAAP;;AACD,SAAK,QAAL;AACC,aAAO;AAACF,QAAAA,KAAK,EAAEL,KAAK,CAACK,KAAd;AAAqBE,QAAAA,GAAG,EAAEZ,MAAM,CAACc;AAAjC,OAAP;;AACD;AACCP,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,YAAtC,EAAoD,OAApD;AACA,aAAO;AAACC,QAAAA,KAAK,EAAEV,MAAM,CAACa,KAAf;AAAsBD,QAAAA,GAAG,EAAE;AAA3B,OAAP;AAdF;AAgBA,CAjBD;;AAmBA,MAAMG,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACrCD,EAAAA,aAAa,CAACE,SAAd,GAA0B;AACzBD,IAAAA,QAAQ,EAAEjB,SAAS,CAACmB;AADK,GAA1B;;AADqC,4BAMpCpB,KAAK,CAACqB,UAAN,CAAiBf,YAAjB,EAA+B;AAACM,IAAAA,KAAK,EAAE,OAAR;AAAiBE,IAAAA,GAAG,EAAE;AAAtB,GAA/B,CANoC;AAAA;AAAA,QAK9BP,KAL8B;AAAA,QAKvBe,QALuB;;AAOrC,SACC,oBAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAEf,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,oBAAD,CAAsB,QAAtB;AAA+B,IAAA,KAAK,EAAEe,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEJ,QADF,CADD,CADD;AAOA,CAdD;;AAgBA,MAAMK,aAAa,GAAG,MAAM;AAC3B,QAAMC,YAAY,GAAGxB,KAAK,CAACyB,UAAN,CAAiBtB,iBAAjB,CAArB;;AACA,MAAIqB,YAAY,KAAKE,SAArB,EAAgC;AAC/B,UAAM,IAAIC,KAAJ,CAAU,kDAAV,CAAN;AACA;;AACD,SAAOH,YAAP;AACA,CAND;;AAQA,MAAMI,gBAAgB,GAAG,MAAM;AAC9B,QAAMJ,YAAY,GAAGxB,KAAK,CAACyB,UAAN,CAAiBpB,oBAAjB,CAArB;;AACA,MAAImB,YAAY,KAAKE,SAArB,EAAgC;AAC/B,UAAM,IAAIC,KAAJ,CAAU,kDAAV,CAAN;AACA;;AACD,SAAOH,YAAP;AACA,CAND;;AAQA,SAASP,aAAT,EAAwBM,aAAxB,EAAuCK,gBAAvC","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {THEMES} from './constants.js';\n\nconst ThemeStateContext = React.createContext();\nconst ThemeDispatchContext = React.createContext();\n\nconst themeReducer = (state, action) => {\n\tswitch (action) {\n\t\tcase 'light':\n\t\t\tdocument.documentElement.setAttribute(\"data-theme\", 'dark');\n\t\t\treturn {color: THEMES.dark, fun: state.fun};\n\t\tcase 'dark':\n\t\t\tdocument.documentElement.setAttribute(\"data-theme\", 'light');\n\t\t\treturn {color: THEMES.light, fun: state.fun};\n\t\tcase 'ultra':\n\t\t\t\n\t\t\treturn {color: state.color, fun: 'normal'};\n\t\tcase 'normal':\n\t\t\treturn {color: state.color, fun: THEMES.ultra};\n\t\tdefault: \n\t\t\tdocument.documentElement.setAttribute(\"data-theme\", 'light');\n\t\t\treturn {color: THEMES.light, fun: 'normal'};\n\t}\n}\n\nconst ThemeProvider = ({children}) => {\n\tThemeProvider.propTypes = {\n\t\tchildren: PropTypes.isRequired\n\t}\n\n\tconst [state, dispatch] = \n\t\tReact.useReducer(themeReducer, {color: 'light', fun: 'normal'});\n\treturn (\n\t\t<ThemeStateContext.Provider value={state}>\n\t\t\t<ThemeDispatchContext.Provider value={dispatch}>\n\t\t\t\t{children}\n\t\t\t</ThemeDispatchContext.Provider>\n\t\t</ThemeStateContext.Provider>\n\t);\n}\n\nconst useThemeState = () => {\n\tconst themeContext = React.useContext(ThemeStateContext);\n\tif (themeContext === undefined) {\n\t\tthrow new Error('themeContext must be used within a ThemeProvider');\n\t}\n\treturn themeContext;\n}\n\nconst useThemeDispatch = () => {\n\tconst themeContext = React.useContext(ThemeDispatchContext);\n\tif (themeContext === undefined) {\n\t\tthrow new Error('themeContext must be used within a ThemeProvider');\n\t}\n\treturn themeContext;\n}\n\nexport { ThemeProvider, useThemeState, useThemeDispatch }\n"]},"metadata":{},"sourceType":"module"}