{"ast":null,"code":"var _jsxFileName = \"/home/lregina/onboarding/2048/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nconst dimension = 4;\n\nfunction Tile(props) {\n  return React.createElement(\"button\", {\n    className: \"tile\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.value);\n} // return True if game over\n\n\nfunction gameOver() {\n  return false;\n} // generates new num in random spot and updates board\n\n\nfunction newNum(board) {\n  let row = Math.floor(Math.random() * dimension);\n  let col = Math.floor(Math.random() * dimension);\n\n  if (board[row][col] === 0) {\n    board[row][col] = 2;\n  } else {\n    newNum(board);\n  }\n\n  return newBoard;\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tiles: this.createBoard(),\n      gameOver: false\n    };\n  }\n\n  createBoard() {\n    let board = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n    return board;\n  }\n\n  handleClick(i, j) {\n    const tiles = this.state.tiles.slice(); //ignore click if game has been won\n    //if (calculateWinner(tiles) || tiles[i]) {\n    //return;\n    //}\n    //tiles[i] = this.state.xIsNext ? 'X' : 'O';\n\n    this.setState({\n      tiles: tiles,\n      gameOver: gameOver //xIsNext: !this.state.xIsNext,\n\n    });\n  }\n\n  renderTile(i, j) {\n    return React.createElement(Tile, {\n      value: this.state.tiles[i][j],\n      onClick: () => this.handleClick(i, j),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    });\n  }\n\n  renderRow(i) {\n    return React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.renderTile(i, 0), this.renderTile(i, 1), this.renderTile(i, 2), this.renderTile(i, 3));\n  }\n\n  render() {\n    let status = true; // later: replace status with timer\n    //const winner = calculateWinner(this.state.tiles);\n    //let status;\n    //if (winner) {\n    //status = 'Winner: ' + winner;\n    //} else {\n    //status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    //}\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, status), this.renderRow(0), this.renderRow(1), this.renderRow(2), this.renderRow(3));\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Board, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })));\n  }\n\n} //function calculateWinner(tiles) {\n//const lines = [\n//[0, 1, 2],\n//[3, 4, 5],\n//[6, 7, 8],\n//[0, 3, 6],\n//[1, 4, 7],\n//[2, 5, 8],\n//[0, 4, 8],\n//[2, 4, 6],\n//];\n//for (let i = 0; i < lines.length; i++) {\n//const [a, b, c] = lines[i];\n//if (tiles[a] && tiles[a] === tiles[b] && tiles[a] === tiles[c]) {\n//return tiles[a];\n//}\n//}\n//return null;\n//}\n// ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 147\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/lregina/onboarding/2048/src/index.js"],"names":["React","ReactDOM","dimension","Tile","props","onClick","value","gameOver","newNum","board","row","Math","floor","random","col","newBoard","Board","Component","constructor","state","tiles","createBoard","handleClick","i","j","slice","setState","renderTile","renderRow","render","status","Game","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst dimension = 4\n\nfunction Tile(props) {\n\treturn (\n\t\t<button \n\t\t\tclassName=\"tile\" \n\t\t\tonClick={props.onClick}\n\t\t>\n\t\t\t{props.value}\n\t\t</button>\n\t);\n}\n\n// return True if game over\nfunction gameOver() {\n\treturn false;\n}\n\n// generates new num in random spot and updates board\nfunction newNum(board) {\n\tlet row = Math.floor(Math.random() * dimension);\t\n\tlet col = Math.floor(Math.random() * dimension);\t\n\tif (board[row][col] === 0) {\n\t\tboard[row][col] = 2;\n\t} else {\n\t\tnewNum(board)\n\t}\n\treturn newBoard;\n}\n\nclass Board extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttiles: this.createBoard(),\n\t\t\tgameOver: false,\n\t\t};\n\t}\n\tcreateBoard(){\n\t\tlet board = [\n\t\t\t\t\t\t\t\t\t[0,0,0,0],\n\t\t\t\t\t\t\t\t\t[0,0,0,0],\n\t\t\t\t\t\t\t\t\t[0,0,0,0],\n\t\t\t\t\t\t\t\t\t[0,0,0,0],\n\t\t\t\t\t\t\t\t]\n\t\treturn board\n\t}\n\thandleClick(i, j) {\n\t\tconst tiles = this.state.tiles.slice();\n\n\t\t//ignore click if game has been won\n\t\t//if (calculateWinner(tiles) || tiles[i]) {\n\t\t\t//return;\n\t\t//}\n\t\t//tiles[i] = this.state.xIsNext ? 'X' : 'O';\n\t\tthis.setState({\n\t\t\ttiles: tiles,\n\t\t\tgameOver: gameOver, \n\t\t\t//xIsNext: !this.state.xIsNext,\n\t\t});\n\t}\n\trenderTile(i, j) {\n\t\treturn (\n\t\t\t<Tile \n\t\t\t\tvalue={this.state.tiles[i][j]}\n\t\t\t\tonClick={() => this.handleClick(i, j)}\n\t\t\t/>\n\t\t);\n\t}\n\trenderRow(i) {\n\t\treturn (\n\t\t\t<div className=\"board-row\">\n\t\t\t\t{this.renderTile(i, 0)}\n\t\t\t\t{this.renderTile(i, 1)}\n\t\t\t\t{this.renderTile(i, 2)}\n\t\t\t\t{this.renderTile(i, 3)}\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\tlet status = true; // later: replace status with timer\n\t\t//const winner = calculateWinner(this.state.tiles);\n\t\t//let status;\n\t\t//if (winner) {\n\t\t\t//status = 'Winner: ' + winner;\n\t\t//} else {\n\t\t\t//status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n\t\t//}\n\t\t\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"status\">{status}</div>\n\t\t\t\t{this.renderRow(0)}\n\t\t\t\t{this.renderRow(1)}\n\t\t\t\t{this.renderRow(2)}\n\t\t\t\t{this.renderRow(3)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass Game extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"game\">\n\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t<Board />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"game-info\">\n\t\t\t\t\t<div>{/* status */}</div>\n\t\t\t\t\t<ol>{/* TODO */}</ol>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n//function calculateWinner(tiles) {\n\t//const lines = [\n\t\t//[0, 1, 2],\n\t\t//[3, 4, 5],\n\t\t//[6, 7, 8],\n\t\t//[0, 3, 6],\n\t\t//[1, 4, 7],\n\t\t//[2, 5, 8],\n\t\t//[0, 4, 8],\n\t\t//[2, 4, 6],\n\t//];\n\t//for (let i = 0; i < lines.length; i++) {\n\t\t//const [a, b, c] = lines[i];\n\t\t//if (tiles[a] && tiles[a] === tiles[b] && tiles[a] === tiles[c]) {\n\t\t\t//return tiles[a];\n\t\t//}\n\t//}\n\t//return null;\n//}\n\n// ========================================\n\nReactDOM.render(\n\t<Game />,\n\tdocument.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}