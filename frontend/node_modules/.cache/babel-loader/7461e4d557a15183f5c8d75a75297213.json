{"ast":null,"code":"var _jsxFileName = \"/home/lregina/onboarding/2048/src/Timer.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactStopwatch from 'react-stopwatch';\nexport const Stopwatch = () => React.createElement(ReactStopwatch, {\n  seconds: 0,\n  minutes: 0,\n  hours: 0,\n  limit: \"00:00:10\",\n  onChange: ({\n    hours,\n    minutes,\n    seconds\n  }) => {// do something\n  },\n  onCallback: () => console.log('Finish'),\n  render: ({\n    formatted,\n    hours,\n    minutes,\n    seconds\n  }) => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Formatted: \", formatted), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Hours: \", hours), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Minutes: \", minutes), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Seconds: \", seconds));\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}); //const [seconds, setSeconds] = useState(0);\n//useEffect(() => {\n//setSeconds(seconds + 1);\n//}, []);\n//return (<p>{seconds}</p>);\n\nexport default Timer;","map":{"version":3,"sources":["/home/lregina/onboarding/2048/src/Timer.js"],"names":["React","useState","useEffect","ReactStopwatch","Stopwatch","hours","minutes","seconds","console","log","formatted","Timer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AAEA,OAAO,MAAMC,SAAS,GAAG,MACvB,oBAAC,cAAD;AACE,EAAA,OAAO,EAAE,CADX;AAEE,EAAA,OAAO,EAAE,CAFX;AAGE,EAAA,KAAK,EAAE,CAHT;AAIE,EAAA,KAAK,EAAC,UAJR;AAKE,EAAA,QAAQ,EAAE,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAAD,KAAiC,CACzC;AACD,GAPH;AAQE,EAAA,UAAU,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,QAAZ,CARpB;AASE,EAAA,MAAM,EAAE,CAAC;AAAEC,IAAAA,SAAF;AAAaL,IAAAA,KAAb;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA;AAA7B,GAAD,KAA4C;AAClD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACeG,SADf,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACWL,KADX,CAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACaC,OADb,CAPF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACaC,OADb,CAVF,CADF;AAgBD,GA1BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADK,C,CA+BN;AAEA;AACC;AACD;AAEA;;AAED,eAAeI,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactStopwatch from 'react-stopwatch';\n\nexport const Stopwatch = () => (\n  <ReactStopwatch\n    seconds={0}\n    minutes={0}\n    hours={0}\n    limit=\"00:00:10\"\n    onChange={({ hours, minutes, seconds }) => {\n      // do something\n    }}\n    onCallback={() => console.log('Finish')}\n    render={({ formatted, hours, minutes, seconds }) => {\n      return (\n        <div>\n          <p>\n            Formatted: { formatted }\n          </p>\n          <p>\n            Hours: { hours }\n          </p>\n          <p>\n            Minutes: { minutes }\n          </p>\n          <p>\n            Seconds: { seconds }\n          </p>\n        </div>\n      );\n    }}\n   />\n);\n \n\t//const [seconds, setSeconds] = useState(0);\n\n\t//useEffect(() => {\n\t\t//setSeconds(seconds + 1);\n\t//}, []);\n\n\t//return (<p>{seconds}</p>);\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}