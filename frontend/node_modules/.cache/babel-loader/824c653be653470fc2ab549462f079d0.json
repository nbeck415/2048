{"ast":null,"code":"var _jsxFileName = \"/home/lregina/onboarding/2048/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nfunction Tile(props) {\n  return React.createElement(\"button\", {\n    className: \"tile\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.value);\n} // return True if game over\n\n\nfunction gameOver() {\n  return false;\n} // create empty board\n\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dimension: 4,\n      tiles: this.createBoard(),\n      gameOver: false\n    };\n  }\n\n  createBoard() {\n    let board = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n    return board;\n  }\n\n  handleClick(i, j) {\n    const tiles = this.state.tiles.slice();\n    const dimension = 4; //ignore click if game has been won\n    //if (calculateWinner(tiles) || tiles[i]) {\n    //return;\n    //}\n    //tiles[i] = this.state.xIsNext ? 'X' : 'O';\n\n    this.setState({\n      dimension: dimension,\n      tiles: tiles,\n      gameOver: gameOver //xIsNext: !this.state.xIsNext,\n\n    });\n  }\n\n  renderTile(i, j) {\n    return React.createElement(Tile, {\n      value: this.state.tiles[i][j],\n      onClick: () => this.handleClick(i, j),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    });\n  }\n\n  renderRow(i) {\n    return React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.renderTile(i, 0), this.renderTile(i, 1), this.renderTile(i, 2), this.renderTile(i, 3));\n  }\n\n  render() {\n    let status = true; // later: replace status with timer\n    //const winner = calculateWinner(this.state.tiles);\n    //let status;\n    //if (winner) {\n    //status = 'Winner: ' + winner;\n    //} else {\n    //status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    //}\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, status), this.renderRow(0), this.renderRow(1), this.renderRow(2), this.renderRow(3));\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Board, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })));\n  }\n\n} //function calculateWinner(tiles) {\n//const lines = [\n//[0, 1, 2],\n//[3, 4, 5],\n//[6, 7, 8],\n//[0, 3, 6],\n//[1, 4, 7],\n//[2, 5, 8],\n//[0, 4, 8],\n//[2, 4, 6],\n//];\n//for (let i = 0; i < lines.length; i++) {\n//const [a, b, c] = lines[i];\n//if (tiles[a] && tiles[a] === tiles[b] && tiles[a] === tiles[c]) {\n//return tiles[a];\n//}\n//}\n//return null;\n//}\n// ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 128\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/lregina/onboarding/2048/src/index.js"],"names":["React","ReactDOM","Tile","props","onClick","value","gameOver","Board","Component","constructor","state","dimension","tiles","createBoard","board","handleClick","i","j","slice","setState","renderTile","renderRow","render","status","Game","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nfunction Tile(props) {\n  return (\n    <button className=\"tile\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\n// return True if game over\nfunction gameOver() {\n  return false;\n}\n\n// create empty board\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dimension: 4,\n      tiles: this.createBoard(),\n      gameOver: false\n    };\n  }\n  createBoard() {\n    let board = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n    return board;\n  }\n  handleClick(i, j) {\n    const tiles = this.state.tiles.slice();\n    const dimension = 4;\n\n    //ignore click if game has been won\n    //if (calculateWinner(tiles) || tiles[i]) {\n    //return;\n    //}\n    //tiles[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      dimension: dimension,\n      tiles: tiles,\n      gameOver: gameOver\n      //xIsNext: !this.state.xIsNext,\n    });\n  }\n  renderTile(i, j) {\n    return (\n      <Tile\n        value={this.state.tiles[i][j]}\n        onClick={() => this.handleClick(i, j)}\n      />\n    );\n  }\n  renderRow(i) {\n    return (\n      <div className=\"board-row\">\n        {this.renderTile(i, 0)}\n        {this.renderTile(i, 1)}\n        {this.renderTile(i, 2)}\n        {this.renderTile(i, 3)}\n      </div>\n    );\n  }\n\n  render() {\n    let status = true; // later: replace status with timer\n    //const winner = calculateWinner(this.state.tiles);\n    //let status;\n    //if (winner) {\n    //status = 'Winner: ' + winner;\n    //} else {\n    //status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    //}\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        {this.renderRow(0)}\n        {this.renderRow(1)}\n        {this.renderRow(2)}\n        {this.renderRow(3)}\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n//function calculateWinner(tiles) {\n//const lines = [\n//[0, 1, 2],\n//[3, 4, 5],\n//[6, 7, 8],\n//[0, 3, 6],\n//[1, 4, 7],\n//[2, 5, 8],\n//[0, 4, 8],\n//[2, 4, 6],\n//];\n//for (let i = 0; i < lines.length; i++) {\n//const [a, b, c] = lines[i];\n//if (tiles[a] && tiles[a] === tiles[b] && tiles[a] === tiles[c]) {\n//return tiles[a];\n//}\n//}\n//return null;\n//}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}