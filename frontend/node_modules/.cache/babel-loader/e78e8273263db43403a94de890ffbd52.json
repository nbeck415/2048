{"ast":null,"code":"import { PureComponent as t } from \"react\";\nimport e from \"ms\";\n\nvar o = function (t, e, o) {\n  return (t > 9 ? t : \"0\" + t) + \":\" + (e > 9 ? e : \"0\" + e) + \":\" + (o > 9 ? o : \"0\" + o);\n},\n    n = function (t) {\n  function n(e) {\n    t.call(this, e);\n    var n = e.hours,\n        s = e.minutes,\n        r = e.seconds,\n        i = o(n, s, r);\n    this.intervalId = setInterval(function () {}, Number.MAX_VALUE), this.state = {\n      formatted: i,\n      stateHours: n,\n      stateMinutes: s,\n      stateSeconds: r\n    };\n  }\n\n  return t && (n.__proto__ = t), (n.prototype = Object.create(t && t.prototype)).constructor = n, n.prototype.componentWillReceiveProps = function () {\n    this.intervalId = setInterval(function () {}, Number.MAX_VALUE), this.setState({\n      stateHours: 0,\n      stateMinutes: 0,\n      stateSeconds: 0\n    });\n  }, n.prototype.componentDidMount = function () {\n    this.props.autoStart && this.timer();\n  }, n.prototype.componentWillUnmount = function () {\n    this.stopToCount();\n  }, n.prototype.stopToCount = function () {\n    clearInterval(this.intervalId);\n  }, n.prototype.counter = function () {\n    var t = this,\n        e = this.props,\n        n = e.limit,\n        s = e.withLoop,\n        r = e.onCallback,\n        i = e.onChange,\n        a = this.state,\n        u = a.stateHours,\n        c = a.stateMinutes,\n        p = a.stateSeconds;\n    this.setState(function (t) {\n      return {\n        stateSeconds: t.stateSeconds + 1\n      };\n    }), p >= 59 && (this.setState(function (t) {\n      return {\n        stateSeconds: 0,\n        stateMinutes: t.stateMinutes + 1\n      };\n    }), c >= 59 && this.setState(function (t) {\n      return {\n        stateMinutes: 0,\n        stateHours: t.stateHours + 1\n      };\n    }));\n    var h = o(u, c, p);\n    this.setState({\n      formatted: h\n    }), i({\n      hours: u,\n      minutes: c,\n      seconds: p\n    }), n === h && setTimeout(function () {\n      t.stopToCount(), s && t.timer(), r();\n    }, 0);\n  }, n.prototype.timer = function () {\n    var t = this;\n    this.counter();\n    var o = setInterval(function () {\n      t.counter();\n    }, e(\"1s\"));\n    this.intervalId = o;\n  }, n.prototype.render = function () {\n    var t = this.props,\n        e = t.children,\n        o = t.render,\n        n = this.state,\n        s = n.formatted,\n        r = n.stateHours,\n        i = n.stateMinutes,\n        a = n.stateSeconds;\n    return e ? e({\n      formatted: s,\n      hours: r,\n      minutes: i,\n      seconds: a\n    }) : o ? o({\n      formatted: s,\n      hours: r,\n      minutes: i,\n      seconds: a\n    }) : (console.error(\"Component ReactStopWatch:\", \"no children or render prop are present\"), null);\n  }, n;\n}(t);\n\nn.displayName = \"ReactStopWatch\", n.defaultProps = {\n  autoStart: !0,\n  withLoop: !1,\n  onCallback: function () {},\n  onChange: function () {}\n};\nexport default n;","map":null,"metadata":{},"sourceType":"module"}