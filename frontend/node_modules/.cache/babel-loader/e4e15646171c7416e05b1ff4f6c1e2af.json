{"ast":null,"code":"import _slicedToArray from \"/home/lregina/2048/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/lregina/2048/frontend/src/components/stopwatch.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { TimeContext } from '../index.js';\n\nconst Stopwatch = () => {\n  const _useContext = useContext(TimeContext),\n        setGameTime = _useContext.setGameTime;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      paused = _useState2[0],\n      setPaused = _useState2[1];\n\n  var _useState3 = useState({\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      time = _useState4[0],\n      setTime = _useState4[1]; // let one second pass\n\n\n  const tick = () => {\n    if (paused) {\n      return;\n    }\n\n    var newHours = time.hours;\n    var newMinutes = time.minutes;\n    var newSeconds = time.seconds + 1;\n\n    if (newSeconds === 60) {\n      setTime({\n        hours: time.hours,\n        minutes: time.minutes + 1,\n        seconds: 0\n      });\n      newSeconds = 0;\n      newMinutes += 1;\n    }\n\n    if (newMinutes === 60) {\n      newMinutes = 0;\n      newHours += 1;\n    }\n\n    setTime({\n      hours: newHours,\n      minutes: newMinutes,\n      seconds: newSeconds\n    });\n  };\n\n  const padTime = timeComponent => {\n    return timeComponent.toString().padStart(2, \"0\");\n  };\n\n  const formattedTime = () => {\n    var formattedHours = padTime(time.hours);\n    var formattedMinutes = padTime(time.minutes);\n    var formattedSeconds = padTime(time.seconds);\n    var timeString = \"\".concat(formattedHours, \": \").concat(formattedMinutes, \": \").concat(formattedSeconds);\n    setGameTime(timeString);\n    return timeString;\n  };\n\n  useEffect(() => {\n    let timerId = setInterval(tick, 1000); // tick every sec \n\n    return () => {\n      clearInterval(timerId);\n    };\n  }, [time]);\n  return React.createElement(\"div\", {\n    className: \"stopwatch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, formattedTime()), React.createElement(\"button\", {\n    className: \"pauseButton\",\n    onClick: () => setPaused(!paused),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, paused ? \"Resume\" : \"Pause\"));\n};\n\nexport default Stopwatch;","map":{"version":3,"sources":["/home/lregina/2048/frontend/src/components/stopwatch.js"],"names":["React","useContext","useState","useEffect","TimeContext","Stopwatch","setGameTime","paused","setPaused","hours","minutes","seconds","time","setTime","tick","newHours","newMinutes","newSeconds","padTime","timeComponent","toString","padStart","formattedTime","formattedHours","formattedMinutes","formattedSeconds","timeString","timerId","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { TimeContext } from '../index.js'\n\nconst Stopwatch = () => {\n\tconst { setGameTime } = useContext(TimeContext);\n\n  var [paused, setPaused] = useState(false);\n  var [time, setTime] = useState({\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  });\n\n  // let one second pass\n  const tick = () => {\n    if (paused) {\n      return;\n    }\n    var newHours = time.hours;\n    var newMinutes = time.minutes;\n    var newSeconds = time.seconds + 1;\n\n    if (newSeconds === 60) {\n      setTime({\n        hours: time.hours,\n        minutes: time.minutes + 1,\n        seconds: 0\n      });\n      newSeconds = 0;\n      newMinutes += 1;\n    }\n    if (newMinutes === 60) {\n      newMinutes = 0;\n      newHours += 1;\n    }\n    setTime({\n      hours: newHours,\n      minutes: newMinutes,\n      seconds: newSeconds\n    });\n  };\n\n  const padTime = timeComponent => {\n    return timeComponent.toString().padStart(2, \"0\");\n  };\n\n  const formattedTime = () => {\n    var formattedHours = padTime(time.hours);\n    var formattedMinutes = padTime(time.minutes);\n    var formattedSeconds = padTime(time.seconds);\n    var timeString = \n\t\t\t`${formattedHours}: ${formattedMinutes}: ${formattedSeconds}`;\n\t\tsetGameTime(timeString);\n    return timeString;\n  };\n\n  useEffect(() => {\n    let timerId = setInterval(tick, 1000); // tick every sec \n    return () => {\n      clearInterval(timerId);\n    };\n  }, [time]);\n\n  return (\n    <div className='stopwatch'>\n      <p>{formattedTime()}</p>\n\t\t\t<button className='pauseButton' onClick={() => setPaused(!paused)}>\n\t\t\t\t{paused ? \"Resume\" : \"Pause\"}\n\t\t\t</button>\n    </div>\n  );\n};\n\nexport default Stopwatch;\n"]},"metadata":{},"sourceType":"module"}